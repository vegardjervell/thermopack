name: unittests

on: [push, pull_request]

jobs:
  run-tests:
    name: Run tests on ${{ matrix.os }} with ${{ matrix.toolchain.compiler }} ${{ matrix.toolchain.version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, macos-12]
        toolchain:
          - {compiler: gcc, version: 13}
        include:
          # - os: ubuntu-latest
          #   toolchain: {nvidia-hpc, version: '23.11'}
          - os: windows-latest
            toolchain: {compiler: intel, version: '2023.2'}
          - os: windows-latest
            toolchain: {compiler: intel-classic, version: '2021.10'}
        exclude:
          - os: windows-latest
            toolchain: {compiler: gcc, version: 13}

    steps:
      - uses: actions/checkout@v4
      - name: checkout submodules
        run: git submodule update --init --recursive

      - uses: actions/setup-python@v5
      - uses: fortran-lang/setup-fortran@v1
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - name: Build ThermoPack
        run: |
            if [[ "RUNNER_OS" == "Windows" ]]; then
              FC=${{ env.FC }}
            fi
            mkdir build
            cd build
            cmake -Dtest=ON -DCMAKE_BUILD_TYPE=Debug ..
            make -j4 install
            echo "--- pycThermopack contents ---"
            ls ../addon/pycThermopack
            echo "--- pycThermopack/thermopack contents ---"
            ls ../addon/pycThermopack/thermopack
    
      - name: Inspect thermopack
        if: matrix.os == 'ubuntu'
        run: | 
          echo "--- Inspecting libthermopack ---"
          ldd installed/libthermopack.so
          echo "--- Inspecting run_unittests ---"
          ldd installed/unittests

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
            name: binary-${{ matrix.os }}
            path: ./installed/*
    
      - id: fortran_test
        name: Run unittests
        continue-on-error: true
        run: |
            result=$(./installed/unittests)
            if echo "$result" | grep -q "OK"; then
            statuscode=0
            else
            statuscode=1
            fi
            echo "$result"
            echo "statuscode=$statuscode" >> $GITHUB_OUTPUT
            exit $statuscode
            
      - uses: actions/setup-python@v5
      - id: python_test 
        name: Run python tests
        continue-on-error: true
        run: |
            python addon/pycThermopack/map_platform_specifics.py
            pip install addon/pycThermopack/[test]
            pytest addon/pyTests
            result=$(pytest addon/pyTests)
            if echo "$result" | grep -q "FAILED"; then
            statuscode=1
            else
            statuscode=0
            fi
            echo "$result"
            echo "statuscode=$statuscode" >> $GITHUB_OUTPUT
            exit $statuscode
    
      - name: Check success
        run: |
            echo "Fortran test result : ${{ steps.fortran_test.outputs.statuscode }}"
            echo "Python test result : ${{ steps.python_test.outputs.statuscode }}"
            if [[ ${{ steps.fortran_test.outputs.statuscode }} -eq 0 ]] && [[ ${{ steps.python_test.outputs.statuscode }} -eq 0 ]]; then
            exit 0
            else
            exit 1
            fi
        


    
            